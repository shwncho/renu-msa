version: "3"

services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server/
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      - renu-network

  config-service:
    container_name: config-service
    build:
      context: ./config-service/
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    networks:
      - renu-network

  apigateway-service:
    container_name: apigateway-service
    build:
      context: ./apigateway-service/
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - eureka-server
    networks:
      - renu-network
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  db:
    container_name: db
    image: mysql
    environment:
      MYSQL_DATABASE: renu-db
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: renuserver
    volumes:
      - ./db/data:/var/lib/mysql
    ports:
      - 3306:3306
    restart: always
    networks:
      - renu-network

  authentication:
    container_name: authentication
    build:
      context: ./authentication/
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
      - config-service
      - apigateway-service
      - db
    restart: always
    networks:
      - renu-network
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/renu-db


  user-service:
    container_name: user-service
    build:
      context: ./user-service/
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
      - config-service
      - apigateway-service
      - db
    restart: always
    networks:
      - renu-network
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/renu-db
      - spring.datasource.username=renu
      - spring.datasource.password=renuserver


  nutrient-service:
    container_name: nutrient-service
    build:
      context: ./nutrient-service
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
      - config-service
      - apigateway-service
      - db
    restart: always
    networks:
      - renu-network
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://db:3306/renu-db


  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: prometheus
    networks:
      - renu-network

  grafana:
    image: "grafana/grafana:latest"
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    container_name: grafana
    networks:
      - renu-network



networks:
  renu-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1